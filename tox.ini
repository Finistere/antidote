[tox]
envlist = manifest,flake8,pyright,mypy,py{37,38,39,310}{,-compiled},coverage-report,doc-html,doc-tests,rstvalidator
isolated_build = true
distshare = {toxworkdir}/distshare

[gh-actions]
python =
    3.7: py37{,-compiled}
    3.8: py38{,-compiled},doc-html
    3.9: py39{,-compiled}
    3.10: py310{,-compiled},flake8,manifest,doc-tests,pyright,mypy,rstvalidator,black

[testenv]
changedir = {envtmpdir}
setenv =
; Every env has its own coverage file which is later merged in coverage-report.
; This needs to be overridden for codecov to work.
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxinidir}/.coverage.{envname}}
    compiled: ANTIDOTE_COMPILED=true
deps =
    -r requirements/tests.txt
commands =
    python --version
    pip freeze
    pytest {toxinidir}/tests \
        --cov=antidote \
        --cov-report term-missing:skip-covered \
        --cov-config {toxinidir}/pyproject.toml


[testenv:mypy]
changedir = {toxinidir}
deps =
    mypy==0.950
    mypy-extensions==0.4.3
commands =
    ; some cast / ignores are for PyRight.
    mypy --no-warn-redundant-casts --no-warn-unused-ignores --cache-dir=/dev/null


[testenv:pyright]
changedir = {toxinidir}
deps =
    ; executing pyright on some tests
    -r requirements/tests.txt
    pyright==1.1.248
commands =
    pyright


[testenv:flake8]
changedir = {toxinidir}
skip_install = true
deps =
    flake8==4.0.1
commands =
    flake8 src docs tests


[testenv:black]
changedir = {toxinidir}
skip_install = true
deps =
    black==22.3.0
commands =
    black --diff --check src tests setup.py docs/conf.py


[flake8]
ignore = W503
;        W503: line break before binary operator (not best practice)
exclude =
    docs/_build
    docs/_themes
max-line-length = 100
; max-complexity = 10


[testenv:rstvalidator]
changedir = {toxinidir}
skip_install = true
deps =
    rstvalidator==2020.12.3
    ; At runtime it complained about the missing pygment dependency. :/
    pygments==2.11.2
commands =
    python -m rstvalidator README.rst


[testenv:doc-html]
changedir = docs
deps =
    -r requirements/docs.txt
whitelist_externals = make
commands =
    make html


[testenv:doc-tests]
changedir = docs
deps =
    -r requirements/docs.txt
whitelist_externals = make
commands =
    make doctest


[testenv:coverage-report]
parallel_show_output = true
depends = py{37,38,39,310}{,-compiled}
changedir = {toxinidir}
skip_install = true
setenv =
    COVERAGE_FILE = .coverage
deps = coverage[toml]==6.3.2
commands =
    coverage combine
    coverage report --skip-covered --show-missing
    coverage html
    coverage xml


[testenv:manifest]
changedir = {toxinidir}
skip_install = true
deps = check-manifest==0.48
commands = check-manifest
